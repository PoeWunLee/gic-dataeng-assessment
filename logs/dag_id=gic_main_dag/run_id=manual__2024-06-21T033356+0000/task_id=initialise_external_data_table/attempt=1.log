[2024-06-21T03:34:20.273+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-06-21T03:34:20.294+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: gic_main_dag.initialise_external_data_table manual__2024-06-21T03:33:56+00:00 [queued]>
[2024-06-21T03:34:20.302+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: gic_main_dag.initialise_external_data_table manual__2024-06-21T03:33:56+00:00 [queued]>
[2024-06-21T03:34:20.303+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-06-21T03:34:20.315+0000] {taskinstance.py:2330} INFO - Executing <Task(SQLExecuteQueryOperator): initialise_external_data_table> on 2024-06-21 03:33:56+00:00
[2024-06-21T03:34:20.323+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1816) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-06-21T03:34:20.324+0000] {standard_task_runner.py:63} INFO - Started process 1818 to run task
[2024-06-21T03:34:20.324+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'gic_main_dag', 'initialise_external_data_table', 'manual__2024-06-21T03:33:56+00:00', '--job-id', '222', '--raw', '--subdir', 'DAGS_FOLDER/main_dag.py', '--cfg-path', '/tmp/tmpm59_69x2']
[2024-06-21T03:34:20.326+0000] {standard_task_runner.py:91} INFO - Job 222: Subtask initialise_external_data_table
[2024-06-21T03:34:20.388+0000] {task_command.py:426} INFO - Running <TaskInstance: gic_main_dag.initialise_external_data_table manual__2024-06-21T03:33:56+00:00 [running]> on host 39e4faefdcb7
[2024-06-21T03:34:20.489+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='***@example.com' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='gic_main_dag' AIRFLOW_CTX_TASK_ID='initialise_external_data_table' AIRFLOW_CTX_EXECUTION_DATE='2024-06-21T03:33:56+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-06-21T03:33:56+00:00'
[2024-06-21T03:34:20.490+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-06-21T03:34:20.491+0000] {sql.py:276} INFO - Executing: BEGIN TRANSACTION;

-- external table ddl --
CREATE TABLE IF NOT EXISTS "raw_external_fund" (
	"financial_type"	TEXT,
	"symbol"	TEXT,
	"security_name"	TEXT,
	"sedol"	TEXT,
	"price"	REAL,
    "quantity"	REAL,
	"realised_pl"	REAL,
    "market_value"	REAL,
	"fund_name"	TEXT,
	"date"	TEXT,
	"hash_uid"	TEXT,
    "isin" TEXT
);

-- ref table create by changing date format --
-- bond_reference table--
CREATE TABLE IF NOT EXISTS "ref_bond_reference" (
	"security_name"	TEXT,
	"isin"	TEXT,
	"sedol"	TEXT,
	"country"	TEXT,
	"coupon"	REAL,
    "maturity_date"	TEXT,
	"coupon_frequency"	TEXT,
	"sector"	TEXT,
	"currency"	TEXT
);
INSERT INTO "ref_bond_reference" (
select 
	b."SECURITY NAME" security_name,
	b."ISIN" isin,
	b."SEDOL" sedol,
	b."COUNTRY" country,
	b."COUPON" coupon,
	TO_CHAR(TO_DATE(b."MATURITY DATE", 'DD/MM/YYYY'), 'YYYY-MM-DD') maturity_date,
	b."COUPON FREQUENCY" coupon_frequency,
	b."SECTOR" sector,
	b."CURRENCY" currency
from bond_reference b
);

-- bond_price table--
CREATE TABLE IF NOT EXISTS "ref_bond_prices"(
	"datetime" TEXT,
	"isin" TEXT,
	"price" REAL
);
INSERT INTO "ref_bond_prices"(
select 
	b."DATETIME" datetime,
	b."ISIN" isin,
	b."PRICE" price
from bond_prices b
);

-- equity_reference --
CREATE TABLE IF NOT EXISTS "ref_equity_reference" (
	"symbol" TEXT,
	"country" TEXT,
	"security_name" TEXT,
	"sector" TEXT,
	"industry" TEXT,
	"currency" TEXT
);
INSERT INTO "ref_equity_reference"(
select 
	e."SYMBOL" symbol,
	e."COUNTRY" country,
	e."SECURITY NAME" security_name,
	e."SECTOR" sector,
	e."INDUSTRY" industry,
	e."CURRENCY" currency
from equity_reference e
);

-- equity_prices --
CREATE TABLE IF NOT EXISTS "ref_equity_prices"(
	"datetime" TEXT,
	"symbol" TEXT,
	"price" REAL
);

INSERT INTO "ref_equity_prices"(
select 
	TO_CHAR(TO_DATE(e."DATETIME", 'MM/DD/YYYY'), 'YYYY-MM-DD') datetime,
	e."SYMBOL" symbol,
	e."PRICE" price 
from equity_prices e
);




COMMIT;
[2024-06-21T03:34:20.505+0000] {base.py:84} INFO - Using connection ID 'cursor' for task execution.
[2024-06-21T03:34:20.520+0000] {base.py:84} INFO - Using connection ID 'cursor' for task execution.
[2024-06-21T03:34:20.581+0000] {sql.py:487} INFO - Running statement: BEGIN TRANSACTION;

-- external table ddl --
CREATE TABLE IF NOT EXISTS "raw_external_fund" (
	"financial_type"	TEXT,
	"symbol"	TEXT,
	"security_name"	TEXT,
	"sedol"	TEXT,
	"price"	REAL,
    "quantity"	REAL,
	"realised_pl"	REAL,
    "market_value"	REAL,
	"fund_name"	TEXT,
	"date"	TEXT,
	"hash_uid"	TEXT,
    "isin" TEXT
);

-- ref table create by changing date format --
-- bond_reference table--
CREATE TABLE IF NOT EXISTS "ref_bond_reference" (
	"security_name"	TEXT,
	"isin"	TEXT,
	"sedol"	TEXT,
	"country"	TEXT,
	"coupon"	REAL,
    "maturity_date"	TEXT,
	"coupon_frequency"	TEXT,
	"sector"	TEXT,
	"currency"	TEXT
);
INSERT INTO "ref_bond_reference" (
select 
	b."SECURITY NAME" security_name,
	b."ISIN" isin,
	b."SEDOL" sedol,
	b."COUNTRY" country,
	b."COUPON" coupon,
	TO_CHAR(TO_DATE(b."MATURITY DATE", 'DD/MM/YYYY'), 'YYYY-MM-DD') maturity_date,
	b."COUPON FREQUENCY" coupon_frequency,
	b."SECTOR" sector,
	b."CURRENCY" currency
from bond_reference b
);

-- bond_price table--
CREATE TABLE IF NOT EXISTS "ref_bond_prices"(
	"datetime" TEXT,
	"isin" TEXT,
	"price" REAL
);
INSERT INTO "ref_bond_prices"(
select 
	b."DATETIME" datetime,
	b."ISIN" isin,
	b."PRICE" price
from bond_prices b
);

-- equity_reference --
CREATE TABLE IF NOT EXISTS "ref_equity_reference" (
	"symbol" TEXT,
	"country" TEXT,
	"security_name" TEXT,
	"sector" TEXT,
	"industry" TEXT,
	"currency" TEXT
);
INSERT INTO "ref_equity_reference"(
select 
	e."SYMBOL" symbol,
	e."COUNTRY" country,
	e."SECURITY NAME" security_name,
	e."SECTOR" sector,
	e."INDUSTRY" industry,
	e."CURRENCY" currency
from equity_reference e
);

-- equity_prices --
CREATE TABLE IF NOT EXISTS "ref_equity_prices"(
	"datetime" TEXT,
	"symbol" TEXT,
	"price" REAL
);

INSERT INTO "ref_equity_prices"(
select 
	TO_CHAR(TO_DATE(e."DATETIME", 'MM/DD/YYYY'), 'YYYY-MM-DD') datetime,
	e."SYMBOL" symbol,
	e."PRICE" price 
from equity_prices e
);




COMMIT;, parameters: None
[2024-06-21T03:34:20.969+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-06-21T03:34:20.983+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=gic_main_dag, task_id=initialise_external_data_table, run_id=manual__2024-06-21T03:33:56+00:00, execution_date=20240621T033356, start_date=20240621T033420, end_date=20240621T033420
[2024-06-21T03:34:21.021+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-06-21T03:34:21.050+0000] {taskinstance.py:3503} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-06-21T03:34:21.053+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
